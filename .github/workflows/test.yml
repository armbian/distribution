name: Build Images
#
# Generates beta, stable or RC images. You can select build runners. By default it generates all images, but you can build images only for one target
# Images are placed at www.arnmbian.com and nighly beta also at https://github.com/armbian/build/releases/tag/latest
#

on:

  workflow_run:
    workflows: ["Build train"]
    types:
      - completed

  workflow_dispatch:

    inputs:

      choice:
        type: choice
        description: Build targets
        options:
        - beta
        - stable
        - rc

      runner:
        type: choice
        description: Build runners for CLI
        options:
        - small
        - ubuntu-latest

      sourcerepo:
        description: Source repository
        required: false
        default: 'nightly'

      packagesrepo:
        type: choice
        description: Beta packages repository
        options:
        - yes
        - no

      advanced:
        description: 'Single board (grep -w tinkerboard |)'
        required: false
        default: ''
        
jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          ref: master
          fetch-depth: '1'
          path: build   
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v3
        with:
          repository: armbian/actions
          ref: main
          token: ${{ secrets.CR_PAT }}
          path: actions
      - name: "Build images"
        id: build-images
        uses: ./actions/make-list

      - name: Build desktops
        id: list_dirs
        run: |
          cat boards.txt
          MATRIX=$(cat boards.txt)
          echo ::set-output name=matrix::$(for x in $(echo "${MATRIX}"); do echo $x; done|jq -cnR '[inputs | select(length>0)]' | jq)
          
  clean:
  
      needs: [ build ]
      runs-on: ubuntu-latest
      #if: ${{ needs.Prepare.outputs.matrix != '[]' && needs.Prepare.outputs.matrix != '' }}
      timeout-minutes: 480
      strategy:
        fail-fast: false
        matrix:
          node: ${{fromJson(needs.Prepare.outputs.matrix)}}
      steps:

      - uses: igorpecovnik/freespace@main
      - run: |
          echo "Hello "
