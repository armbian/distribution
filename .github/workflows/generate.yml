name: Maintain Runners

on:
  workflow_dispatch:

jobs:

  Prepare:

    name: Prepare
    runs-on: ubuntu-latest
    #if: ${{ github.repository_owner == 'armbian' }}
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Prepare matrix
        id: list_dirs
        run: |
          echo ::set-output name=matrix::$(for x in $(ls -1 images); do echo $x; done|jq -cnR '[inputs | select(length>0)]' | jq)
  Purge:
  
    needs: [ Prepare ]
    runs-on: [ubuntu-latest]
    if: ${{ needs.Prepare.outputs.matrix != '[]' && needs.Prepare.outputs.matrix != '' }}
    timeout-minutes: 480
    strategy:
      fail-fast: false
      matrix: 
        node: ${{fromJson(needs.Prepare.outputs.matrix)}}
    steps:
   
      - name: Checkout build framework
        uses: actions/checkout@v3
        with:
          repository: armbian/build
          path: build

      - name: Checkout support scripts
        uses: actions/checkout@v3
        with:
          repository: armbian/scripts
          path: scripts
   
      - name: Checkout software distribution
        uses: actions/checkout@v3
        with:
          path: distribution
   
      - name: Pull Docker image
        run: |
          sudo docker image rm $(sudo docker images | grep -v $(cat build/VERSION | sed 's/trunk.*/trunk/')"-$(dpkg --print-architecture)" | awk 'NR>1 {print $3}') 2> /dev/null || true 
          sudo docker pull ghcr.io/armbian/build:$(cat build/VERSION  | cut -d"." -f1-2)"-$(dpkg --print-architecture)"
   
      - name: Preparing
        run: |
          sudo cp scripts/VERSION build/VERSION
